import sys
import cv2
import torch
import time
from datetime import datetime
from ultralytics import YOLO
from paddleocr import PaddleOCR
import re

# total_start = time.time()

# print("----------------------------")
camera_id = int(sys.argv[1])
folder = sys.argv[2]

### Load OCR model ###
# start = time.time()
ocr = PaddleOCR(lang='vi', show_log = False, use_angle_cls=True)
# print(f"‚úÖ Load PaddleOCR: {time.time() - start:.2f}s")

### Load YOLO model ###
# start = time.time()
model = YOLO('src/python/yolo_weights/best.pt').to('cuda')
# print(f"‚úÖ Load YOLO model: {time.time() - start:.2f}s")

### Capture image ###
# start = time.time()
cap = cv2.VideoCapture(camera_id)
cap.set(cv2.CAP_PROP_FOURCC, cv2.VideoWriter_fourcc(*'MJPG'))
ret, frame = cap.read()
cap.release()

### Save image ###
if ret:
    filename = f"{folder}/{datetime.now().strftime('%Y%m%d_%H%M%S')}.jpeg"
    cv2.imwrite(filename, frame)
    # print(f"‚úÖ L∆∞u ·∫£nh: {filename}")

if not ret:
    # print("‚ùå L·ªói: Kh√¥ng th·ªÉ ch·ª•p ·∫£nh", file=sys.stderr)
    sys.exit(1)
# print(f"üì∏ Ch·ª•p ·∫£nh: {time.time() - start:.2f}s")

### Detect with YOLO ###
# start = time.time()
results = model(frame, verbose=False)
boxes = results[0].boxes
# print(f"üîç YOLO detect: {time.time() - start:.2f}s")

### OCR with Paddle ###
# start = time.time()
x1, y1, x2, y2 = map(int, boxes.xyxy[0])
cut_img = frame[y1:y2, x1:x2]
res = ocr.ocr(cut_img)
text = res[0][0][1][0] if res and res[0] else "Kh√¥ng ƒë·ªçc ƒë∆∞·ª£c"
text = result = re.sub(r'[^A-Za-z0-9]', '', text)
# print(f"üî° PaddleOCR: {time.time() - start:.2f}s")
# print(f"üìÉ K·∫øt qu·∫£: {text}")
print(text)
### T·ªïng th·ªùi gian ###
# print(f"‚è±Ô∏è T·ªïng th·ªùi gian: {time.time() - total_start:.2f}s")
